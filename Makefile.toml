extend= [
  { path = "coverage_grcov.makefile.toml" }
]

[config]
default_to_workspace = false
skip_core_tasks = true

[env]
PROJ_NAME = "SpringQL"
SKIP_INSTALL_GRCOV = 1

[tasks.help]
script = ['''
#!/usr/bin/env bash -eux
cargo make --list-all-steps
''']

[tasks.format]
script = ['''
#!/usr/bin/env bash -eux
cargo fmt --all
''']

[tasks.lint]
script = ['''
#!/usr/bin/env bash -eux
RUSTFLAGS='-D warnings' cargo clippy --workspace --all-targets --all-features
''']

[tasks.check-dependencies]
condition = { rust_version = { min = "1.56.1" } } # cargo-deny 0.11.4 : supports rust 1.56.1 later
script = ['''
#!/usr/bin/env bash -eux
cargo deny check
''']

[tasks.build]
script = ['''
#!/usr/bin/env bash -eux
RUSTFLAGS='-D warnings' cargo build --workspace --all-targets --all-features
''']
dependencies=["check-dependencies"]

[tasks.test]
script = ['''
#!/usr/bin/env bash -eux
RUST_LOG=springql_core=info,warn RUSTFLAGS='-D warnings' cargo test --workspace --all-targets --all-features
''']

[tasks.example-build]
script = ['''
#!/usr/bin/env bash -eux
for example in $(git ls-files |grep -e 'examples/[^/]*\.rs$') ; do
  cargo build --example $(basename -s .rs "$example")
done
''']

[tasks.example-run]
dependencies = ["example-build"]
script = ['''
#!/usr/bin/env bash -eux

echo '-- Start doc_app1'
  cargo run --example doc_app1 &
  sleep 1
  echo '{"ts": "2022-01-01 13:00:00.000000000", "temperature": 5.3}' | nc localhost 54300
  sleep 1
  pkill doc_app1
echo '-- End doc_app1'
echo

sleep 3

echo '-- Start doc_app2'
  cargo run --example doc_app2 &
  sleep 1
  echo '{"ts": "2022-01-01 13:00:00.000000000", "symbol": "ORCL", "amount": 10}' |nc localhost 54300
  echo '{"ts": "2022-01-01 13:00:01.000000000", "symbol": "ORCL", "amount": 30}' |nc localhost 54300
  echo '{"ts": "2022-01-01 13:00:01.000000000", "symbol": "GOOGL", "amount": 50}' |nc localhost 54300
  echo '{"ts": "2022-01-01 13:00:02.000000000", "symbol": "ORCL", "amount": 40}' |nc localhost 54300
  echo '{"ts": "2022-01-01 13:00:05.000000000", "symbol": "GOOGL", "amount": 60}' |nc localhost 54300
  echo '{"ts": "2022-01-01 13:00:10.000000000", "symbol": "APPL", "amount": 100}' |nc localhost 54300
  sleep 1
  pkill doc_app2
echo '-- End doc_app2'
echo

echo '-- Start in_vehicle_pipeline'
  cargo run --example in_vehicle_pipeline
echo '-- End in_vehicle_pipeline'
echo
''']

[tasks.doc]
script = ['''
#!/usr/bin/env bash -eux
cargo clean --doc
cargo d
''']

[tasks.deadlink]
script = ['''
#!/usr/bin/env bash -eux

mkdir -p target
set +e
cargo deadlinks --check-http --ignore-fragments | tee target/cargo-deadlinks.out
set -e
cat target/cargo-deadlinks.out | sort | uniq > target/cargo-deadlinks.sort
cat deadlinks.expected | sort | uniq > target/cargo-deadlinks.expected.sort
diff -u target/cargo-deadlinks.expected.sort target/cargo-deadlinks.sort

mlc --ignore-path target

''']

[tasks.copyright]
script = [
  '''
#!/usr/bin/env bash -eux
for rs in $(git ls-files |grep -e '\.rs$') ; do
  grep '// This file is part of https://github.com/SpringQL/SpringQL which is licensed under MIT OR Apache-2.0. See file LICENSE-MIT or LICENSE-APACHE for full license details.' $rs
done
''',
]

[tasks.publish]
script = [
  '''
#!/usr/bin/env bash -eux
cargo workspaces publish
''',
]

[tasks.actionlint]
description="lint github actions with actionlint"
script = [
  '''
#!/usr/bin/env bash -eux
docker run --rm -v $(pwd):/repo --workdir /repo rhysd/actionlint:latest -color
'''
]

[tasks.lcov]
alias="coverage_grcov"
